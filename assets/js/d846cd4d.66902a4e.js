"use strict";(self.webpackChunklhtp=self.webpackChunklhtp||[]).push([[65432],{30876:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>g});var a=t(2784);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=a.createContext({}),l=function(e){var r=a.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=l(e.components);return a.createElement(c.Provider,{value:r},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=l(t),d=n,g=m["".concat(c,".").concat(d)]||m[d]||s[d]||i;return t?a.createElement(g,o(o({ref:r},u),{},{components:t})):a.createElement(g,o({ref:r},u))}));function g(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,o=new Array(i);o[0]=d;var p={};for(var c in r)hasOwnProperty.call(r,c)&&(p[c]=r[c]);p.originalType=e,p[m]="string"==typeof e?e:n,o[1]=p;for(var l=2;l<i;l++)o[l]=t[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9988:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var a=t(7896),n=(t(2784),t(30876));const i={title:"\u270f\ufe0f 1.3.4.2 Practice: Array Mapping",id:"1342-practice-array-mapping",slug:"1342-practice-array-mapping",hide_table_of_contents:!0,sidebar_position:41,day:"thursday",type:"exercise",url:"https://github.com/epicodus-curriculum/fidgetech-1-introduction-to-programming/blob/main/4b_classwork_practice_array_mapping.md"},o=void 0,p={unversionedId:"fidgetech-1-introduction-to-programming/arrays-looping/1342-practice-array-mapping",id:"fidgetech-1-introduction-to-programming/arrays-looping/1342-practice-array-mapping",title:"\u270f\ufe0f 1.3.4.2 Practice: Array Mapping",description:"Goal:  Now that we've learned about Array.prototype.map(), let's further hone our array mapping skills by completing the exercises detailed below.",source:"@site/docs/fidgetech-1-introduction-to-programming/arrays-looping/4b-classwork-practice-array-mapping.md",sourceDirName:"fidgetech-1-introduction-to-programming/arrays-looping",slug:"/fidgetech-1-introduction-to-programming/arrays-looping/1342-practice-array-mapping",permalink:"/fidgetech-1-introduction-to-programming/arrays-looping/1342-practice-array-mapping",draft:!1,tags:[],version:"current",sidebarPosition:41,frontMatter:{title:"\u270f\ufe0f 1.3.4.2 Practice: Array Mapping",id:"1342-practice-array-mapping",slug:"1342-practice-array-mapping",hide_table_of_contents:!0,sidebar_position:41,day:"thursday",type:"exercise",url:"https://github.com/epicodus-curriculum/fidgetech-1-introduction-to-programming/blob/main/4b_classwork_practice_array_mapping.md"},sidebar:"fidgetech-1-introduction-to-programming",previous:{title:"\ud83d\udcd3 1.3.4.1 Array Mapping",permalink:"/fidgetech-1-introduction-to-programming/arrays-looping/1341-array-mapping"},next:{title:"\u270f\ufe0f 1.3.4.3 Practice: Credit Card Validator, Roman Numerals, or Cryptosquare",permalink:"/fidgetech-1-introduction-to-programming/arrays-looping/1343-practice-credit-card-validator-roman-numerals-or-cryptosquare"}},c={},l=[{value:"Warm Up",id:"warm-up",level:2},{value:"Code",id:"code",level:2},{value:"Array Mapping Practice",id:"array-mapping-practice",level:3}],u={toc:l},m="wrapper";function s(e){let{components:r,...t}=e;return(0,n.kt)(m,(0,a.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Goal"),":  Now that we've learned about ",(0,n.kt)("inlineCode",{parentName:"p"},"Array.prototype.map()"),", let's further hone our array mapping skills by completing the exercises detailed below."),(0,n.kt)("h2",{id:"warm-up"},"Warm Up"),(0,n.kt)("hr",null),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"What is a callback function? How is it different from a plain old function?"),(0,n.kt)("li",{parentName:"ul"},"What portion of the following code is the callback function? What does this particular callback function do?")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"const tripledNumbers = [0,3,6,9].map(function(number) {\n  return number * 3;\n});\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Does ",(0,n.kt)("inlineCode",{parentName:"li"},"Array.prototype.map()")," alter the array it is called upon?"),(0,n.kt)("li",{parentName:"ul"},"Discuss with your partner when you would use ",(0,n.kt)("inlineCode",{parentName:"li"},"Array.prototype.forEach()")," and when it might be better to use ",(0,n.kt)("inlineCode",{parentName:"li"},"Array.prototype.map()"),".")),(0,n.kt)("h2",{id:"code"},"Code"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"array-mapping-practice"},"Array Mapping Practice"),(0,n.kt)("p",null,"Complete the following in the JavaScript DevTools console:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Make an array of numbers, then use ",(0,n.kt)("inlineCode",{parentName:"li"},"Array.prototype.map()")," to return an array containing each of the original numbers + 1."),(0,n.kt)("li",{parentName:"ul"},"Create an array of words. Use ",(0,n.kt)("inlineCode",{parentName:"li"},"Array.prototype.map()")," to return an array of the same words in all uppercase.")))}s.isMDXComponent=!0}}]);