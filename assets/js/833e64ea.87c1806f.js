"use strict";(self.webpackChunklhtp=self.webpackChunklhtp||[]).push([[37336],{30876:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>w});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,w=u["".concat(d,".").concat(m)]||u[m]||p[m]||i;return n?r.createElement(w,o(o({ref:t},s),{},{components:n})):r.createElement(w,o({ref:t},s))}));function w(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9373:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7896),a=(n(2784),n(30876));const i={title:"\ud83d\udcd3 4.4.0.5 Writing Custom Middleware",id:"4405-writing-custom-middleware",slug:"4405-writing-custom-middleware",hide_table_of_contents:!0,sidebar_position:5,day:"weekend",type:"lesson",url:"https://github.com/epicodus-curriculum/fidgetech-4-react/blob/main/0e_writing_our_own_custom_middleware.md"},o=void 0,l={unversionedId:"fidgetech-4-react/react-with-apis/4405-writing-custom-middleware",id:"fidgetech-4-react/react-with-apis/4405-writing-custom-middleware",title:"\ud83d\udcd3 4.4.0.5 Writing Custom Middleware",description:"In the last lesson, we created and tested a reducer that will handle data from an API call. We also added action constants and wrote and tested action creators.",source:"@site/docs/fidgetech-4-react/react-with-apis/0e-writing-our-own-custom-middleware.md",sourceDirName:"fidgetech-4-react/react-with-apis",slug:"/fidgetech-4-react/react-with-apis/4405-writing-custom-middleware",permalink:"/fidgetech-4-react/react-with-apis/4405-writing-custom-middleware",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"\ud83d\udcd3 4.4.0.5 Writing Custom Middleware",id:"4405-writing-custom-middleware",slug:"4405-writing-custom-middleware",hide_table_of_contents:!0,sidebar_position:5,day:"weekend",type:"lesson",url:"https://github.com/epicodus-curriculum/fidgetech-4-react/blob/main/0e_writing_our_own_custom_middleware.md"},sidebar:"fidgetech-4-react",previous:{title:"\ud83d\udcd3 4.4.0.4 Building an API Application with React and Redux",permalink:"/fidgetech-4-react/react-with-apis/4404-building-an-api-application-with-react-and-redux"},next:{title:"\ud83d\udcd3 4.4.0.6 Async Actions with Redux Thunk",permalink:"/fidgetech-4-react/react-with-apis/4406-async-actions-with-redux-thunk"}},d={},c=[{value:"Installing Redux",id:"installing-redux",level:2},{value:"Adding Redux to Our Application",id:"adding-redux-to-our-application",level:2},{value:"Creating Custom Middleware",id:"creating-custom-middleware",level:2},{value:"Utilizing Middleware",id:"utilizing-middleware",level:2}],s={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In the last lesson, we created and tested a reducer that will handle data from an API call. We also added action constants and wrote and tested action creators."),(0,a.kt)("p",null,"In this lesson, we'll add Redux to our application and write a custom middleware function."),(0,a.kt)("h2",{id:"installing-redux"},"Installing Redux"),(0,a.kt)("p",null,"First, we'll add Redux and React Redux bindings to our project."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ npm install redux@4.0.5 react-redux@7.1.3\n")),(0,a.kt)("p",null,"We'll install Redux Thunk, too:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ npm install redux-thunk@2.3.0\n")),(0,a.kt)("h2",{id:"adding-redux-to-our-application"},"Adding Redux to Our Application"),(0,a.kt)("p",null,"Next, we'll need to update ",(0,a.kt)("inlineCode",{parentName:"p"},"index.js")," to include a Redux store. ",(0,a.kt)("strong",{parentName:"p"},"We are not adding any middleware functionality yet.")," This will all be review. "),(0,a.kt)("div",{class:"filename"},"index.js"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore } from 'redux';\nimport reducer from './reducers/headlines-reducer';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n")),(0,a.kt)("p",null,"If there is any confusion about what is happening in the code above, we recommend reviewing the content in the React with Redux course section."),(0,a.kt)("h2",{id:"creating-custom-middleware"},"Creating Custom Middleware"),(0,a.kt)("p",null,"Before we continue, note that creating custom middleware is generally beyond the scope of this course. However, we can learn a lot by creating a simple middleware function. You aren't expected to write middleware in this course section, though you are certainly welcome to explore custom middleware on your own. The goal here is to demystify how middleware works."),(0,a.kt)("p",null,"First, create a directory called ",(0,a.kt)("inlineCode",{parentName:"p"},"middleware")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"src")," directory. Then add the following file:"),(0,a.kt)("div",{class:"filename"},"src/middleware/middleware-logger.js"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const middlewareLogger = store => next => action => {\n  console.log('Original State:', store.getState());\n  console.log('Current Action:', action);\n  next(action);\n  console.log('New Updated State:', store.getState());\n};\n\nexport default middlewareLogger;\n")),(0,a.kt)("p",null,"Our custom middleware function logs the value of our store's original state, the current action, and the store's new updated state after we call ",(0,a.kt)("inlineCode",{parentName:"p"},"next(action)"),". "),(0,a.kt)("h2",{id:"utilizing-middleware"},"Utilizing Middleware"),(0,a.kt)("p",null,"In order for Redux to use our new middleware, we need to apply it to the store. Let's add this functionality to ",(0,a.kt)("inlineCode",{parentName:"p"},"index.js"),". In the process, we'll also import Redux Thunk and add thunk middleware, too."),(0,a.kt)("div",{class:"filename"},"index.js"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"...\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport middlewareLogger from './middleware/middleware-logger';\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware, middlewareLogger));\n")),(0,a.kt)("p",null,"Note that we've already imported ",(0,a.kt)("inlineCode",{parentName:"p"},"createStore")," from Redux - but now we're importing a new piece of functionality called ",(0,a.kt)("inlineCode",{parentName:"p"},"applyMiddleware")," from the same place. We also import our new middleware function and ",(0,a.kt)("inlineCode",{parentName:"p"},"thunkMiddleware")," as well."),(0,a.kt)("p",null,"Next, we add a second argument to ",(0,a.kt)("inlineCode",{parentName:"p"},"createStore()"),". This second argument is the ",(0,a.kt)("inlineCode",{parentName:"p"},"applyMiddleware()")," function, which in turn takes an argument - the middleware we want to apply to the store. As we can see here, we can pass in multiple pieces of middleware."),(0,a.kt)("p",null,"Our Redux store is now ready to use middleware. However, we won't be able to see our middleware at work until we start dispatching actions. We'll do that in the next lesson."),(0,a.kt)("p",null,"While our custom middleware function is very simple, it's actually a basic version of an ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/evgenyrodionov/redux-logger"},"open source library")," Redux developers use to state changes in the console."),(0,a.kt)("p",null,"In the next lesson, we'll learn how to create an asynchronous action that uses Redux Thunk. Then, in the lesson after that, we'll complete all application functionality. In the process, we'll also see our custom middleware function at work."))}p.isMDXComponent=!0}}]);